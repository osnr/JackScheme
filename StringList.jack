/** The StringList class provides a linked list abstraction + comparison. */
class StringList {
    field String data;
    field StringList next;

    constructor StringList new(String car, List cdr) {
        let data = car;
        let next = cdr;
        return this;
    }

    /* Disposes this List by recursively disposing its tail. */
    method void dispose() {
        if (~(next = null)) {
            do next.dispose();
        }
        // Use an OS routine to recycle the memory held by this
        // object.
        do Memory.deAlloc(this);
        return;
    }

    function boolean equals(String a, String b) {
        var int i;
        let i = 0;
        while (i < a.length()) {
            if (~(a.charAt(i) = b.charAt(i))) {
                return false;
            }
            let i = i + 1;
        }
        return (i = a.length()) & (i = b.length());
    }

    method int find(String item) {
        if (StringList.equals(item, data)) {
            return 0;
        }
        if (~(next = null)) {
            return 1 + next.find(item);
        }
        return -1;
    }
} // class List
